package ru.job4j.array;

import java.util.Arrays;

/**
 * Класс для работы с дубликатами элементов в массиве.
 * @author vzamylin
 * @version 1
 * @since 07.03.2018
 */
public class ArrayDuplicate {

    /**
     * Удаление дубликатов строк в массиве.
     * @param array Исходный массив с возможными дубликатами.
     * @return Массив с удаленными дубликатами (исходный порядок элементов при этом не сохраняется).<br/>
     * <br/>
     * <u>Описание работы метода:</u><br/>
     * Проходим по массиву (внешний цикл), для каждого элемента ищем дубликаты после позиции этого элемента (внутренний цикл).<br/>
     * В случае обнаружения дубликата копируем на его место сначала последний элемент массива, на место следующего дубликата предпоследний и т.д., т.е. все дубликаты остаются вместе в хвосте массива, а уникальные элементы в начале.<br/>
     * При этом, после нахождения очередного дубликата уменьшаем кол-во уникальных элементов массива, являющееся правой границей прохода обоих циклов, чтобы повторно не захватывать те дубликаты, которые уже были сгруппированы в конце массива в предыдущих проходах.<br/>
     * А также, после нахождения дубликата уменьшаем текущий индекс внутреннего цикла, чтобы еще раз проверить на дубликат только что переставленный с хвоста элемент.<br/>
     * И, наконец, когда все дубликаты сгруппированы в конце, а уникальные в начале, возвращаем массив, урезанный кол-вом уникальных элементов.
     */
    public String[] remove(String[] array) {
        int uniqueCount = array.length; // Кол-во уникальных элементов массива.
        for (int i = 0; i < uniqueCount; i++) {
            for (int j = i + 1; j < uniqueCount; j++) {
                if (array[j].equals(array[i])) {
                    array[j--] = array[uniqueCount-- - 1];
                }
            }
        }
        return Arrays.copyOf(array, uniqueCount);
    }
}